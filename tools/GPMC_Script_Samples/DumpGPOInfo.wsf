'////////////////////////////////////////////////////////////////////////////
'// Copyright (c) Microsoft Corporation.  All rights reserved
'//
'// Title:	DumpGPOInfo.wsf
'// Author:	mtreit@microsoft.com
'// Created:	10/13/2001
'// Purpose:	Lists info for a specific GPO
'// Revision:	Ported from JScript->VBScript by dtsaltas (October 20,2002)
'//
'////////////////////////////////////////////////////////////////////////////

'///////////////////////////////////////
'// Initialization
'///////////////////////////////////////
<job>

' Include necessary libraries
<script language="JScript" src="Lib_CommonGPMCFunctions.js"/>
<script language="VBScript">

' Create global objects for use by the rest of the script
Dim GPM       : Set GPM = CreateObject("GPMgmt.GPM")
Dim Constants : Set Constants = GPM.GetConstants()

' Define flags needed for querying SecurityDescriptor
Dim bOwner : bOwner = true
Dim bGroup : bGroup = false
Dim bDACL  : bDACL  = false
Dim bSACL  : bSACL  = false


' If you don't have write permissions on a GPO, querying for the SACL
' will fail. The following gives you the necessary flags to only query
' for the 'owner' part of the security descriptor, which is all we care
' about in most cases. 'Owner' can be read with read-only rights

Dim SecurityFlags
SecurityFlags = Constants.SecurityFlags(bOwner, bGroup, bDACL, bSACL)

'///////////////////////////////////////
'// Main script
'///////////////////////////////////////

' Handle command line arguments
Dim ArgumentList
Set ArgumentList = ProcessCommandLineArguments
Dim strDomainName : strDomainName = ArgumentList.Item("Domain")
Dim strGPOName    : strGPOName    = ArgumentList.Item("GPOName")

' Initialize the Domain object
Dim GPMDomain
Set GPMDomain = GPM.GetDomain(strDomainName, "", Constants.UseAnyDC)

' Get the current forest
Dim strForest : strForest = CStr(GetForestDNSName(strDomainName)) 

' Initialize the Sites Container Object
Dim GPMSitesContainer
Set GPMSitesContainer = GPM.GetSitesContainer(strForest, strDomainName, "", Constants.UseAnyDC)

' Print info about a specific GPO
PrintGPOInfo strGPOName, GPMDomain

'///////////////////////////////////////
'// Function Definitions
'///////////////////////////////////////

' Print info about a specific GPO
Function PrintGPOInfo(strGPOName, GPMDomain)
	On Error Resume Next

	' Get the desired GPO - this will either return a single GPO, or
	' a list if more than one GPO with the specified name exists
	Dim GPOList
 	Set GPOList = GetGPO(strGPOName, GPMDomain)
  
	If GPOList Is Nothing Then
		WScript.Echo "Could not find GPO '" & strGPOName & "' in domain '" & GPMDomain.Domain & "'."
		Exit Function
	End If
        
        Dim iGPOCount : iGPOCount = 0
        iGPOCount = GPOList.Count

	If iGPOCount > 0 Then
		' Multiple GPOs were found
	 	WScript.Echo "** " & GPOList.Count & " GPOs were found with name '" & strGPOName & "' **" & vbCrLf
		WScript.Echo "Dumping all instances."

		For Each objGPO in GPOList
			PrintDetailedGPOInfo objGPO
		Next

                Exit Function
	Else
		' We have a single GPO, not a list, so just process it
		PrintDetailedGPOInfo GPOList 
        End If

End Function


' Print detailed info about a GPO
Function PrintGPODetails(GPMGPO)

	Dim strCreated : strCreated = GPMGPO.CreationTime
	Dim strChanged : strChanged = GPMGPO.ModificationTime
	Dim strOwner   : strOwner   = GPMGPO.GetSecurityDescriptor(SecurityFlags).Owner

	WScript.Echo vbCrLf & "-- Details --"
	WScript.Echo "Created:" & vbTab & strCreated
	WScript.Echo "Changed:" & vbTab & strChanged
	WScript.Echo "Owner:"   & vbTab & vbTab & strOwner
	
	WScript.Echo vbCrLf
	WScript.Echo "User Enabled:" & vbTab & GPMGPO.IsUserEnabled
	WScript.Echo "Mach Enabled:" & vbTab & GPMGPO.IsComputerEnabled
	
	WScript.Echo vbCrLf
	WScript.Echo "-- Version Numbers --"
  	'[todo] - variant types of the following not supported in VBScript
	WScript.Echo "User DS:"     & vbTab & CLng(GPMGPO.UserDSVersionNumber)
	WScript.Echo "User Sysvol:" & vbTab & CLng(GPMGPO.UserSysvolVersionNumber)
	WScript.Echo "Mach DS:"     & vbTab & CLng(GPMGPO.ComputerDSVersionNumber)
	WScript.Echo "Mach Sysvol:" & vbTab & CLng(GPMGPO.ComputerSysvolVersionNumber)

End Function

' Print the list of trustees with a particular set of permissions on a GPO
Function PrintGPOPermissions(GPMGPO, PermissionType)

	' Print out a header identifying the type of rights being listed
	Dim strHeader : strHeader = ""
	Select Case PermissionType

		Case Constants.PermGPOApply
		   strHeader = vbCrLf & "-- Who this GPO applies to --"
		

		Case Constants.PermGPOEdit:
		   strHeader = vbCrLf & "-- Who can edit this GPO --"
		

		Case Constants.PermGPOEditSecurityAndDelete:
		   strHeader = vbCrLf & "-- Who can edit settings, modify security and delete this GPO --"
		
		
		Case Constants.PermGPORead:
		   strHeader = vbCrLf & "-- Who only has Read access --"
		
		
		Case Constants.PermGPOCustom:
		   strHeader = vbCrLf & "-- Who has custom permissions --"
		
	End Select

	WScript.Echo strHeader

	' Get the list of security settings on this GPO
	Dim GPMSecurityInfo
	Set GPMSecurityInfo = GPMGPO.GetSecurityInfo()

	' Print out the groups who have the specified permission

	Dim GPOPermission 
	Dim strTrusteeName

	For Each GPOPermission in GPMSecurityInfo

		strTrusteeName = ""
		If GPOPermission.Permission = PermissionType Then
		   On Error Resume Next
		      strTrusteeName = GPOPermission.Trustee.TrusteeName
		   If Err.Number <> 0 Then
		      strTrusteeName =  GPOPermission.Trustee.TrusteeSid
		   End If
			WScript.Echo strTrusteeName
                End If
	Next
End Function

' Print all places a given GPO is linked
Function PrintGPOLinks(GPMGPO)

	' Search for all SOM links for this GPO
	Dim GPMSearchCriteria
	Set GPMSearchCriteria = GPM.CreateSearchCriteria()
	GPMSearchCriteria.Add Constants.SearchPropertySOMLinks, Constants.SearchOpContains, GPMGPO
	
	WScript.Echo vbCrLf
	WScript.Echo "-- Where this GPO is linked (Sites,Domain,OU) --"

	Dim SOMList
	On Error Resume Next
	   Set SOMList = GPMDomain.SearchSOMs(GPMSearchCriteria)
        If Err.Number <> 0 Then
	   WScript.Echo ErrCode(Err.Number) 
           WScript.Echo Err.Description
           WScript.Clear
	   WScript.Quit(-1)
	End If
	
	Dim SiteLinkList
	On Error Resume Next
	   Set SiteLinkList = GPMSitesContainer.SearchSites(GPMSearchCriteria)
        If Err.Number <> 0 Then
	   WScript.Echo ErrCode(Err.Number) 
           WScript.Echo Err.Description
           WScript.Clear
	   WScript.Quit(-1)
	End If

	If SOMList.Count = 0 and SiteLinkList.Count = 0 Then
		WScript.Echo "No Site, Domain or OU links found for this GPO"
		Exit Function
	End If

	' Print out all domain/OU GPO links that were found
	Dim SOM
	Dim strSOMType

	For Each SOM in SOMList
		Select Case SOM.Type
			Case Constants.SOMDomain
				strSOMType = "Domain"
			Case Constants.SOMOU
				strSOMType = "OU"
		End Select
		
		' Print GPO Domain and OU links
		WScript.Echo SOM.Name & " (" & strSOMType & ")"   
				           
	Next
	
	' Print GPO Site Links
	Dim SiteLink

	For Each SiteLink in SiteLinkList
		WScript.Echo SiteLink.Name & " (Site)"
	Next
	
End Function

'Prints detailed info about a given GPO
Function PrintDetailedGPOInfo(GPMGPO)

	WScript.Echo "=============================================="
	WScript.Echo "Name:" & vbTab & GPMGPO.DisplayName
	WScript.Echo "ID:"   & vbTab & GPMGPO.ID
       
	' Print the GPO details
	PrintGPODetails GPMGPO

	' Print apply rights
	PrintGPOPermissions GPMGPO, Constants.PermGPOApply 

	' Print edit rights
	PrintGPOPermissions GPMGPO, Constants.PermGPOEdit 
	
	' Print edit, modify security and delete rights
	PrintGPOPermissions GPMGPO, Constants.PermGPOEditSecurityAndDelete	
	
	' Print read rights
	PrintGPOPermissions GPMGPO, Constants.PermGPORead
	
	' Print custom rights
	PrintGPOPermissions GPMGPO, Constants.PermGPOCustom
	
	' Print the list of links
	PrintGPOLinks GPMGPO

	WScript.Echo vbCrLf
	WScript.Echo "==============================================" & vbCrLf
	
End Function


' Takes a WScript.Arguments object and returns a dictionary object
' containing the named arguments and values that were passed in
Function ProcessCommandLineArguments()

	Dim strGPOName    : strGPOName    = ""
	Dim strDomainName : strDomainName = ""

	' Check if this is cscript. If not, print an error and bail out

	If UCase(Right(WScript.FullName,11)) = "WSCRIPT.EXE" Then
		WScript.Echo "You must use cscript.exe to execute this script."
		WScript.Quit(-1)
	End If


	If WScript.Arguments.Length = 0 Then
		WScript.Arguments.ShowUsage
		WScript.Quit(-1)
	End If
	
	Dim Result
	Set Result = CreateObject("Scripting.Dictionary")

	strGPOName = WScript.Arguments(0)

	If WScript.Arguments.Named.Exists("Domain") Then	
	   strDomainName = WScript.Arguments.Named("Domain")
	End If

	' Get the current domain if none was specified
	If strDomainName = "" Then
	   strDomainName = GetDNSDomainForCurrentUser()
	End If

	Result.Add "GPOName",strGPOName
	Result.Add "Domain" ,strDomainName
	Set ProcessCommandLineArguments = Result

End Function

</script>

<!-- Usage and command line argument information -->
<runtime>

<description>
Given a GPO name or GUID, prints information about that GPO.
</description>

<unnamed name="GPOName" helpstring="GPO name or ID" type="string" required="true" />
<named name="Domain" helpstring="DNS name of domain" type="string" required="false" />

<example>
Example: DumpGPOInfo.wsf TestGPO /domain:mydomain.com
</example>

</runtime>

</job>