'////////////////////////////////////////////////////////////////////////////
'// Copyright (c) Microsoft Corporation.  All rights reserved
'//
'// Title:	BackupGPO.wsf
'// Author:	mtreit@microsoft.com
'// Created:	1/3/2002
'//
'// Purpose:	Takes a GPO name or ID and backs that GPO up to the
'//		specified backup location
'// Revision:	Ported from JScript->VBScript by dtsaltas (December 2002)
'//
'////////////////////////////////////////////////////////////////////////////

'///////////////////////////////////////
'// Initialization
'///////////////////////////////////////
<job>

' Include necessary libraries

<script language="JScript" src="Lib_CommonGPMCFunctions.js"/>
<script language="VBScript">

' Create global objects for use by the rest of the script
Dim GPM       : Set GPM = CreateObject("GPMgmt.GPM")
Dim Constants : Set Constants = GPM.GetConstants()

'///////////////////////////////////////
'// Main script
'///////////////////////////////////////

' Handle command line arguments
Dim ArgumentList     : Set ArgumentList = ProcessCommandLineArguments()
Dim szDomainName     : szDomainName     = ArgumentList.Item("Domain")
Dim szGPOName        : szGPOName        = ArgumentList.Item("GPOName")
Dim szBackupLocation : szBackupLocation = ArgumentList.Item("BackupLocation")
Dim szComment        : szComment        = ArgumentList.Item("Comment")

' Validate the path given
 Dim bValidPath	: bValidPath = ValidatePath(szBackupLocation)
  
 If bValidPath = false Then
	WScript.Echo "The path '" & szBackupLocation & "' could not be found."
	WScript.Echo "Verify the path exists."
	WScript.Quit
End If

' Initialize the Domain object
Dim GPMDomain : Set GPMDomain = GPM.GetDomain(szDomainName, "", Constants.UseAnyDC)

' Backup the desired GPO
BackupGPO szGPOName, szBackupLocation, szComment, GPMDomain

'///////////////////////////////////////
'// Function Definitions
'///////////////////////////////////////


' Takes a GPO name, domain and file system location and backs up the specified GPO
' to that location

Function BackupGPO(strGPOName, strBackupLocation, strComment, GPMDomain)

	' Get the GPO object requested
	Dim GPO
        Set GPO = GetGPO(strGPOName, GPMDomain)
	If IsNull(GPO) Then

		WScript.Echo "Could not find GPO " & strGPOName & " in domain " & GPMDomain.Domain & "."
		Exit Function

	End If

	' We could get back a collection of multiple GPOs instead of just one
	' If so, warn the user
	'
        Dim iGPOCount : iGPOCount = 0
        On Error Resume Next
        iGPOCount = GPO.Count
        On Error Goto 0
	If iGPOCount > 0 Then

		WScript.Echo "There are multiple GPOs with the name '" & strGPOName & "'"
		WScript.Echo "Please pass in the unique ID (GUID) of the GPO you want to back up."
		Exit Function
	End If

	WScript.Echo "Found GPO '" & GPO.DisplayName & "'" & vbCrLf

	' Perform the backup
        On Error Resume Next
	Dim GPMResult
        Set GPMResult = GPO.Backup(strBackupLocation, strComment)

	' Call the OverallStatus method on the GPMResult. This will throw an exception if there
	' were any errors during the actual operation.
	GPMResult.OverallStatus()
	
	If Err.Number <> 0 Then
	
        ' if we were able to get a GPMResult object, print any status message errors
	If Not IsNull(GPMResult) Then
	   PrintStatusMessages(GPMResult)
        End If
	WScript.Echo "The backup attempt failed."
	WScript.Echo "Attempted to backup GPO '" & strGPOName & "' to location " & strBackupLocation
	'WScript.Echo ErrCode(err.number) & " - " & err.description
	Exit Function
        End If
	
	PrintStatusMessages GPMResult
	Dim GPMBackup
        Set GPMBackup = GPMResult.Result
	
	WScript.Echo "Done." & vbCrLf
	WScript.Echo "Backed up GPO " & GPMBackup.GPODisplayName & " with the following properties:" & vbCrLf
	WScript.Echo "GPO ID:"  & vbTab & vbTab & GPMBackup.GPOID
	WScript.Echo "Timestamp:" & vbTab & GPMBackup.TimeStamp
	WScript.Echo "Backup ID:" & vbTab & GPMBackup.ID

End Function

' Takes a WScript.Arguments object and returns a dictionary object
' containing the named arguments and values that were passed in

Function ProcessCommandLineArguments()
	
	Dim szGPOName        : szGPOName        = ""
	Dim szBackupLocation : szBackupLocation = ""
	Dim szDomainName     : szDomainName     = ""
	Dim szComment        : szComment        = ""


	' Check if this is cscript. If not, print an error and bail out

	If UCase(Right(WScript.FullName,11)) = "WSCRIPT.EXE" Then
		WScript.Echo "You must use cscript.exe to execute this script."
		WScript.Quit(-1)
	End If
	
	

	If WScript.Arguments.Length = 0 Then
		WScript.Arguments.ShowUsage()
		WScript.Quit(-1)
	End If
	
	Dim Result : Set Result = CreateObject("Scripting.Dictionary")

	If WScript.Arguments.Length < 2 Then
		WScript.Echo vbCrLf & "Please specify both a GPO name and a backup location"
		WScript.Quit()
	End If

	szGPOName        = WScript.Arguments(0)
	szBackupLocation = WScript.Arguments(1)

	' Get the comment to use, if specified
	If WScript.Arguments.Named.Exists("Comment") Then
		szComment = WScript.Arguments.Named("Comment")
	End If


	If WScript.Arguments.Named.Exists("Domain") Then
		szDomainName = WScript.Arguments.Named("Domain")
	End If

	' Get the current domain if none was specified
	If szDomainName = "" Then
		szDomainName = GetDNSDomainForCurrentUser()
	End If

	Result.Add "GPOName"        , szGPOName
	Result.Add "Domain"         , szDomainName
	Result.Add "BackupLocation" , szBackupLocation
	Result.Add "Comment"        , szComment

	Set ProcessCommandLineArguments = Result

End Function
</script>
<!-- Usage and command line argument information -->
<runtime>

<description>
Takes a GPO name or ID and backs up that GPO to the specified file system location.
</description>

<unnamed name="GPOName" helpstring="GPO name or ID" type="string" required="true" />
<unnamed name="BackupLocation" helpstring="File system location to back up to" type="string" required="true" />
<named name="Comment" helpstring="Optional comment for the backup" type="string" required="false" />
<named name="Domain" helpstring="DNS name of domain" type="string" required="false" />

<example>
Example: BackupGPO.wsf TestGPO c:\GPO-Backups /comment:"Weekly backup"
</example>

</runtime>

</job>